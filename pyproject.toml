[project]
name = "ohlcv-rag-system"
version = "1.0.0"
description = "RAG system for analyzing OHLCV financial market data"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "pandas>=2.2.0",
    "numpy>=1.26.4",
    "yfinance>=0.2.36",
    "requests>=2.31.0",
    "chromadb>=0.4.22",
    "weaviate-client>=3.25.0",
    "qdrant-client>=1.7.0",
    "faiss-cpu>=1.7.4",
    "pymilvus>=2.3.0",
    "sentence-transformers>=2.3.1",
    "langchain>=0.1.6",
    "langchain-community>=0.0.19",
    "langchain-openai>=0.0.5",
    "openai>=1.12.0",
    "scikit-learn>=1.4.0",
    "ta>=0.11.0",
    "python-dotenv>=1.0.1",
    "tqdm>=4.66.1",
    "fastapi>=0.109.2",
    "uvicorn>=0.27.0",
    "pydantic>=2.6.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.uv]
managed = true
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.15.0",
    "black>=23.7.0",
    "ruff>=0.0.287",
    "mypy>=1.5.1",
    "ipython>=8.14.0",
]

[project.optional-dependencies]
integration = [
    "testcontainers>=4.0.0",
    "docker>=6.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-timeout>=2.1.0",
    "redis>=4.5.0",
    "psycopg2-binary>=2.9.0",
    "pymongo>=4.4.0",
]

vector-stores = [
    "weaviate-client>=3.25.0",
    "qdrant-client>=1.7.0",
    "pymilvus>=2.3.0",
]

# Group dependencies for different use cases
[tool.uv.sources]
# Use CPU-only PyTorch to avoid huge CUDA downloads
torch = { index = "pytorch-cpu" }
torchvision = { index = "pytorch-cpu" }

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple"

[tool.uv.pip]
index-url = "https://pypi.org/simple"

# Define dependency groups for different scenarios
[dependency-groups]
# Minimal test dependencies (for quick unit tests)
test-minimal = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
]

# Full test dependencies (includes integration test requirements)
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "pytest-asyncio>=0.21.0",
    "pytest-timeout>=2.1.0",
    "testcontainers>=3.7.0",
]

# Development tools
dev = [
    "black>=23.7.0",
    "ruff>=0.0.287",
    "mypy>=1.5.1",
    "ipython>=8.14.0",
    "pre-commit>=3.3.3",
    "pytest-asyncio>=1.2.0",
]

# Documentation dependencies
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.1.0",
    "mkdocstrings[python]>=0.22.0",
]
